/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ms.graha.b2.freeswim1;

import ms.graha.b2.freeswim1.simulation.Particle;
import ms.graha.b2.freeswim1.simulation.SimulationContext;
import processing.core.*;
import processing.opengl.PShader;

public class App extends PApplet {

	PGraphics offscreen;
	PShader shade;
	SimulationContext simulationContext;
	int numberOfParticles = 4000;

	//create an array of java points to store the last 10 mouse positions
	float[] mousePositionsX = new float[10];
	float[] mousePositionsY = new float[10];
	int mousePositionIndex = 0;
	PImage textureImage;
	public void settings() {
		size(2560, 1600, P2D);

	}

	public void setup() {

		shade = loadShader("blur.glsl");
		simulationContext = new SimulationContext(width, height, numberOfParticles);
		offscreen = createGraphics(width, height);
		
		// set all mouse positions to current
		for (int i = 0; i < mousePositionsX.length; i++) {
			mousePositionsX[i] = mouseX;
			mousePositionsY[i] = mouseY;
	
		}

		background(0);
	}

	public void draw() {

		background(0);
		mousePositionsX[mousePositionIndex] = mouseX;
		mousePositionsY[mousePositionIndex] = mouseY;

		float mouseXSpeed = (mousePositionsX[mousePositionIndex] - mousePositionsX[(mousePositionIndex + 1) % mousePositionsX.length]) /140;
		float mouseYSpeed = (mousePositionsY[mousePositionIndex] - mousePositionsY[(mousePositionIndex + 1) % mousePositionsY.length]) /40;
		mousePositionIndex = (mousePositionIndex + 1) % mousePositionsX.length;

		strokeWeight(1);
		
		// interpolate the positions between the last mouse position and the current and emit 10 particles along the path

		for (int i = 0; i < 100; i++) {
			simulationContext.emitParticles((int) lerp(mousePositionsX[mousePositionIndex], mouseX, i / 100.0f),
					(int) lerp(mousePositionsY[mousePositionIndex], mouseY, i / 100.0f), mouseXSpeed, mouseYSpeed, 1);
		}

		//simulationContext.emitParticles(mouseX, mouseY, mouseXSpeed,mouseYSpeed, 10);

		simulationContext.tick();
		Particle[] particles = simulationContext.getParticles();
		for (int i = 0; i < numberOfParticles; i++) {
			if (simulationContext.getParticles()[i] != null) {

				stroke(255 * particles[i].intensity,0,160);
				line(particles[i].x, particles[i].y, particles[i].x - particles[i].vx,
						particles[i].y - particles[i].vy);

			}
		}

		filter(shade);
	}

	public static void main(String[] passedArgs) {
		String[] appletArgs = new String[] { "ms.graha.b2.freeswim1.App" };
		PApplet.main(appletArgs);
	}
}
